// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserPW               string   `protobuf:"bytes,2,opt,name=UserPW,proto3" json:"UserPW,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{0}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserRequest) GetUserPW() string {
	if m != nil {
		return m.UserPW
	}
	return ""
}

type DataResponse struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Id                   uint32   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataResponse) Reset()         { *m = DataResponse{} }
func (m *DataResponse) String() string { return proto.CompactTextString(m) }
func (*DataResponse) ProtoMessage()    {}
func (*DataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{1}
}

func (m *DataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataResponse.Unmarshal(m, b)
}
func (m *DataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataResponse.Marshal(b, m, deterministic)
}
func (m *DataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataResponse.Merge(m, src)
}
func (m *DataResponse) XXX_Size() int {
	return xxx_messageInfo_DataResponse.Size(m)
}
func (m *DataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DataResponse proto.InternalMessageInfo

func (m *DataResponse) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *DataResponse) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*UserRequest)(nil), "uxti.de.UserRequest")
	proto.RegisterType((*DataResponse)(nil), "uxti.de.DataResponse")
}

func init() {
	proto.RegisterFile("data.proto", fileDescriptor_871986018790d2fd)
}

var fileDescriptor_871986018790d2fd = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x49, 0x2c, 0x49,
	0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0xad, 0x28, 0xc9, 0xd4, 0x4b, 0x49, 0x55,
	0x72, 0xe4, 0xe2, 0x0e, 0x2d, 0x4e, 0x2d, 0x0a, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92,
	0xe2, 0xe2, 0x00, 0x71, 0xfd, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xe0,
	0x7c, 0x21, 0x31, 0x2e, 0x36, 0x10, 0x3b, 0x20, 0x5c, 0x82, 0x09, 0x2c, 0x03, 0xe5, 0x29, 0x19,
	0x71, 0xf1, 0xb8, 0x00, 0x4d, 0x0e, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x12, 0xe2,
	0x62, 0x29, 0x05, 0xca, 0x40, 0xf5, 0x83, 0xd9, 0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x60, 0x7d,
	0xbc, 0x41, 0x40, 0x96, 0x91, 0x33, 0x17, 0xa7, 0x4f, 0x7e, 0x7a, 0x66, 0x1e, 0xc8, 0x08, 0x21,
	0x33, 0x2e, 0x76, 0xf7, 0xd4, 0x12, 0x30, 0x53, 0x44, 0x0f, 0xea, 0x30, 0x3d, 0x24, 0x57, 0x49,
	0x89, 0xc2, 0x45, 0x91, 0x2d, 0x72, 0x62, 0x89, 0x62, 0x2a, 0x48, 0x4a, 0x62, 0x03, 0xfb, 0xc8,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xd6, 0xf0, 0xb5, 0xdf, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LoginUserClient is the client API for LoginUser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoginUserClient interface {
	GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*DataResponse, error)
}

type loginUserClient struct {
	cc grpc.ClientConnInterface
}

func NewLoginUserClient(cc grpc.ClientConnInterface) LoginUserClient {
	return &loginUserClient{cc}
}

func (c *loginUserClient) GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*DataResponse, error) {
	out := new(DataResponse)
	err := c.cc.Invoke(ctx, "/uxti.de.LoginUser/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoginUserServer is the server API for LoginUser service.
type LoginUserServer interface {
	GetUser(context.Context, *UserRequest) (*DataResponse, error)
}

// UnimplementedLoginUserServer can be embedded to have forward compatible implementations.
type UnimplementedLoginUserServer struct {
}

func (*UnimplementedLoginUserServer) GetUser(ctx context.Context, req *UserRequest) (*DataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}

func RegisterLoginUserServer(s *grpc.Server, srv LoginUserServer) {
	s.RegisterService(&_LoginUser_serviceDesc, srv)
}

func _LoginUser_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginUserServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uxti.de.LoginUser/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginUserServer).GetUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoginUser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "uxti.de.LoginUser",
	HandlerType: (*LoginUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _LoginUser_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "data.proto",
}
